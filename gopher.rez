#include "Types.rez"
#include "defines.h"


resource rVersion (0x1) {
	{
		0x0,
		0x0,
		0x0,
		alpha,
		0x2
	},
	verUS,
	"Gopher",
	"(C) 2022-2023 Kelvin W Sherlock "
};

resource rComment(0x1) {
	"Gopher"
	"\$0D"
	"\$0D"
	"This program contains material from the ORCA/C "
	"Run-Time Libraries, copyright 1987-2022 by Byte Works, Inc. "
	"Used with Permission."
	"\$0D"
};

resource rToolStartup (kStartStopID) {
	$C080, /* set master SCB to mode640 + fFastPortAware + fUseShadowing */
	{
		3,$0000,      /* misc tools */
		4,$0307,      /* quickdraw require sys 6.0+*/
		5,$0000,      /* desk manager */
		6,$0000,      /* eventMgr */
		11,$0000,      /* int math */
		14,$0000,      /* Window Manager */
		15,$0000,      /* Menu Manager */
		16,$0000,      /* Control Manager */
		18,$0000,      /* QD Aux */
		19,$0000,      /* print manager */
		20,$0000,      /* LineEdit tool set */
		21,$0000,      /* Dialog Manager */
		22,$0000,      /* Scrap manager */
		23,$0000,      /* standard file */
		27,$0000,      /* Font manager */
		28,$0000,      /* list manager */
		34,$0000,      /* text edit */
	}
};

resource rMenuBar (kMenuBarID) {
	{
		kAppleMID,
		kFileMID,
		kEditMID,
		kTextMID,
		kNetworkMID,
		kBookmarkMID,
		kWindowMID
	};
};

resource rMenu (kAppleMID, nocrossbank){
	kAppleMID,
	0xA008,
	kAppleMID,
	{ kAbout, kPreferences, kDivider };
};

resource rMenu (kFileMID, nocrossbank){
	kFileMID,
	0xA008,
	kFileMID,
	{
		kOpenItem,
		kSaveItem,
		kCloseItem,
		kDivider,
		kPageSetupItem,
		kPrintItem,
		kDivider,
		kQuitItem
	};
};


resource rMenu (kEditMID, nocrossbank){
    kEditMID,
    0xA008,
    kEditMID,
    {
        kUndoItem,
        kDivider,
        kCutItem,
        kCopyItem,
        kPasteItem,
        kClearItem,
        kDivider,
        kSelectAllItem
    };
};


resource rMenu (kTextMID, nocrossbank){
	kTextMID,
	0xA008,
	kTextMID,
	{
		kWrapTextItem,
		kDeDotItem,
		kTab4Item,
		kTab8Item,
		kEncoding1Item,
		kEncoding2Item,
		kBinsciiItem
	};
};

// Hierarchic Text menu
resource rMenu (kH_TextMID, nocrossbank){
	kTextMID,
	0xA008,
	kTextMID,
	{
		kWrapTextItem,
		kDeDotItem,
		kH_TabItem,
		kH_EncodingItem,
		kBinsciiItem
	};
};

// Hierarchic Tab submenu
resource rMenu (kH_TabItem, nocrossbank){
	kH_TabItem,
	0x2008, // name is ptr
	0, // submenu name must be 0.
	{
		kH_Tab4Item,
		kH_Tab8Item
	};
};

// Hierarchic Encoding submenu
resource rMenu (kH_EncodingItem, nocrossbank){
	kH_EncodingItem,
	0x2008, // name is ptr
	0, // submenu name must be 0
	{
		kH_Encoding1Item,
		kH_Encoding2Item
	};
};



resource rMenu (kNetworkMID, nocrossbank){
	kNetworkMID,
	0xA008,
	kNetworkMID,
	{
		kConnectItem,
		kDisconnectItem,
		kNetworkStatusItem
	};
};

resource rMenu (kBookmarkMID, nocrossbank){
	kBookmarkMID,
	0xA008 | rmDisabled,
	kBookmarkMID,
	{
		kAddBookmarkItem
	};
};

resource rMenu (kWindowMID, nocrossbank){
	kWindowMID,
	0xA008 | rmDisabled,
	kWindowMID,
	{
	};
};

resource rMenuItem (kUndoItem, nocrossbank){
    kUndoItem,
    "Z",
    "z",
    0,
    0x8000,
    kUndoItem
};

resource rMenuItem (kCutItem, nocrossbank)
{
    kCutItem,
    "X",
    "x",
    0,
    0x8000,
    kCutItem
};

resource rMenuItem (kCopyItem, nocrossbank){
    kCopyItem,
    "C",
    "c",
    0,
    0x8000,
    kCopyItem
};

resource rMenuItem (kPasteItem, nocrossbank){
    kPasteItem,
    "V",
    "v",
    0,
    0x8000,
    kPasteItem
};


resource rMenuItem (kClearItem, nocrossbank){
    kClearItem,
    "",
    "",
    0,
    0x8000,
    kClearItem
};

resource rMenuItem (kSelectAllItem, nocrossbank){
    kSelectAllItem,
    "A",
    "a",
    0,
    0x8000,
    kSelectAllItem
};

resource rMenuItem (kWrapTextItem, nocrossbank){
    kWrapTextItem,
    "",
    "",
    0,
    0x8000,
    kWrapTextItem
};



resource rMenuItem (kDeDotItem, nocrossbank){
    kDeDotItem,
    "",
    "",
    0,
    0x8000 | rMIDisabled,
    kDeDotItem
};


resource rMenuItem (kTab4Item, nocrossbank){
    kTab4Item,
    "",
    "",
    0,
    0x8000 | rMIDisabled,
    kTab4Item
};

resource rMenuItem (kTab8Item, nocrossbank){
    kTab8Item,
    "",
    "",
    0,
    0x8000 | rMIDisabled,
    kTab8Item
};

// hierarchic only!
resource rMenuItem (kH_TabItem, nocrossbank){
    kH_TabItem,
    "",
    "",
    0,
    0x8000 | rMIDisabled,
    kH_TabItem
};

resource rMenuItem (kH_Tab4Item, nocrossbank){
    kTab4Item,
    "",
    "",
    0,
    0x8000 | rMIDisabled,
    kH_Tab4Item
};

resource rMenuItem (kH_Tab8Item, nocrossbank){
    kTab8Item,
    "",
    "",
    0,
    0x8000 | rMIDisabled,
    kH_Tab8Item
};


// hierarchic only!
resource rMenuItem (kH_EncodingItem, nocrossbank){
    kH_EncodingItem,
    "",
    "",
    0,
    0x8000 | rMIDisabled,
    kH_EncodingItem
};
resource rMenuItem (kH_Encoding1Item, nocrossbank){
    kEncoding1Item,
    "",
    "",
    0,
    0x8000 | rMIDisabled,
    kH_Encoding1Item
};

resource rMenuItem (kH_Encoding2Item, nocrossbank){
    kEncoding2Item,
    "",
    "",
    0,
    0x8000 | rMIDisabled,
    kH_Encoding2Item
};

resource rMenuItem (kEncoding1Item, nocrossbank){
    kEncoding1Item,
    "",
    "",
    0,
    0x8000 | rMIDisabled,
    kEncoding1Item
};

resource rMenuItem (kEncoding2Item, nocrossbank){
    kEncoding2Item,
    "",
    "",
    0,
    0x8000 | rMIDisabled,
    kEncoding2Item
};


resource rMenuItem (kBinsciiItem, nocrossbank){
    kBinsciiItem,
    "",
    "",
    0,
    0x8000 | rMIDisabled,
    kBinsciiItem
};


resource rMenuItem (kAbout, nocrossbank){
	kAbout,
	"",
	"",
	0,
	0x8000,
	kAbout
};

resource rMenuItem (kPreferences, nocrossbank){
	kPreferences,
	",",
	",",
	0,
	0x8000 | rMIDisabled,
	kPreferences
};



resource rMenuItem (kOpenItem, nocrossbank){
	kOpenItem,
	"O",
	"o",
	0,
	0x8000,
	kOpenItem
};

resource rMenuItem (kSaveItem, nocrossbank){
	kSaveItem,
	"S",
	"s",
	0,
	0x8000,
	kSaveItem
};


resource rMenuItem (kCloseItem, nocrossbank){
	kCloseItem,
	"W",
	"w",
	0,
	0x8000,
	kCloseItem
};



resource rMenuItem (kPageSetupItem, nocrossbank){
	kPageSetupItem,
	"",
	"",
	0,
	0x8000 | rMIDisabled,
	kPageSetupItem    
};

resource rMenuItem (kPrintItem, nocrossbank){
	kPrintItem,
	"P",
	"p",
	0,
	0x8000 | rMIDisabled,
	kPrintItem    
};


resource rMenuItem (kQuitItem, nocrossbank){
	kQuitItem,
	"Q",
	"q",
	0,
	0x8000,
	kQuitItem    
};


resource rMenuItem (kConnectItem, nocrossbank)
{
    kConnectItem,
    "",
    "",
    0,
    0x8000,
    kConnectItem
};

resource rMenuItem (kDisconnectItem, nocrossbank)
{
    kDisconnectItem,
    "",
    "",
    0,
    0x8000,
    kDisconnectItem
};

resource rMenuItem (kNetworkStatusItem, nocrossbank)
{
    kNetworkStatusItem,
    "",
    "",
    0,
    0x8000,
    kNetworkStatusItem
};


resource rMenuItem (kAddBookmarkItem, nocrossbank)
{
    kAddBookmarkItem,
    "D",
    "d",
    0,
    0x8000,
    kAddBookmarkItem
};

resource rMenuItem (kDivider)	{
	kDivider,
	"",
	"",
	0,
	0x8000 | rMIDisabled,
	kDivider
};


/* This menu item is the dividing line item.  It is used in several places. */
resource rPString (kDivider) {
	"-"
};


resource rPString (kAppleMID, nocrossbank){"@"};
resource rPString (kFileMID, nocrossbank){"  File  "};
resource rPString (kEditMID, nocrossbank){"  Edit  "};
resource rPString (kTextMID, nocrossbank){"  Text  "};
resource rPString (kNetworkMID, nocrossbank){"  Network  "};
resource rPString (kBookmarkMID, nocrossbank){"  Bookmark  "};
resource rPString (kWindowMID, nocrossbank){"  Window  "};


resource rPString (kAbout, nocrossbank){"About..."};
resource rPString (kPreferences, nocrossbank){"Preferences..."};

resource rPString (kOpenItem, nocrossbank){"Open..."};
resource rPString (kSaveItem, nocrossbank){"Save"};
resource rPString (kCloseItem, nocrossbank){"Close"};
resource rPString (kPageSetupItem, nocrossbank){"Page Setup"};
resource rPString (kPrintItem, nocrossbank){"Print"};
resource rPString (kQuitItem, nocrossbank){"Quit"};

resource rPString (kUndoItem, nocrossbank){"Undo"};
resource rPString (kCutItem, nocrossbank){"Cut"};
resource rPString (kCopyItem, nocrossbank){"Copy"};
resource rPString (kPasteItem, nocrossbank){"Paste"};
resource rPString (kClearItem, nocrossbank){"Clear"};
resource rPString (kSelectAllItem, nocrossbank){"Select All"};


resource rPString (kWrapTextItem, nocrossbank){"Wrap Text"};
resource rPString (kDeDotItem, nocrossbank){"Fix Dots"};
resource rPString (kTab4Item, nocrossbank){"Tab Stops: 4"};
resource rPString (kTab8Item, nocrossbank){"Tab Stops: 8"};
resource rPString (kEncoding1Item, nocrossbank){"Encoding: MacRoman"};
resource rPString (kEncoding2Item, nocrossbank){"Encoding: UTF"};
resource rPString (kBinsciiItem, nocrossbank){"Process BinSCII"};


resource rPString (kH_TabItem, nocrossbank){ $$Format("Tab Stops{*r%08x", kH_TabItem) };
resource rPString (kH_EncodingItem, nocrossbank){ $$Format("Encoding{*r%08x", kH_EncodingItem) };

resource rPString (kH_Tab4Item, nocrossbank){"4"};
resource rPString (kH_Tab8Item, nocrossbank){"8"};
resource rPString (kH_Encoding1Item, nocrossbank){"MacRoman"};
resource rPString (kH_Encoding2Item, nocrossbank){"UTF"};


resource rPString (kConnectItem, nocrossbank){"Connect"};
resource rPString (kDisconnectItem, nocrossbank){"Disconnect"};
resource rPString (kNetworkStatusItem, nocrossbank){"Status..."};

resource rPString (kAddBookmarkItem, nocrossbank){"Add Bookmark..."};



// currently, for the list manager, height must be 11 * x

#define IndexWindowWidth (632-8)
#define IndexWindowHeight (194-29)

resource rWindParam1 (kIndexWindow) {
	// visibility toggled after
	fTitle + fMove + fClose /* + fGrow + fBScroll */,
	kIndexWindow, /* title id */
	0x0,
	{0, 0, 0, 0},
	kIndexWindow, /* color table */
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	0,
	0,
	// {40, 40, 190, 600}, /* wPosition */
	{29, 8, 194, 632}, /* wPosition */
	infront,
	kGopherIndex, /* rControlList */
	(refIsResource << 10) + /* color table */
	(refIsResource << 8) + /* title */ 
	singleResource /* control descriptor */
};



#define TextWindowWidth (632-8)
#define TextWindowHeight (196-29)
resource rWindParam1 (kTextWindow) {
	fTitle + fMove + fClose + fVis,
	kTextWindow, /* title id */
	0x0,
	{0, 0, 0, 0},
	kTextWindow, /* color table */
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	0,
	0, /* info height */
	{29, 8, 196, 632}, /* wPosition */
	infront,
	kGopherText, /* rControlList */
	(refIsResource << 10) + /* color table */
	(refIsResource << 8) + /* title */ 
	singleResource /* control descriptor */
};


resource rWindParam1 (kURLWindow) {
	/*fAlert + */ fVis + fFlex,
	0, /* title id */
	0x0,
	{0, 0, 0, 0},
	kURLWindow, /* color table */
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	0,
	0,
	{50, 40, 70, 600}, /* wPosition */
	infront,
	kGopherURL, /* rControlList */
	(refIsResource << 10) + /* color table */
	(refIsPtr << 8) + /* title */ 
	singleResource /* control descriptor */
};

#define SearchWindowWidth (600-40)
resource rWindParam1 (kSearchWindow) {
	/*fAlert + */ fVis + fFlex,
	0, /* title id */
	0x0,
	{0, 0, 0, 0},
	kURLWindow, /* color table */
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	0,
	0,
	{50, 40, 90, 600}, /* wPosition */
	infront,
	kSearchWindow, /* rControlList */
	(refIsResource << 10) + /* color table */
	(refIsPtr << 8) + /* title */ 
	ResourceToResource /* control descriptor */
};




resource rControlList(kSearchWindow) {
	{
		kSearchText,
		kSearchLineEdit
	}
};

resource rControlTemplate (kSearchText) {
	kSearchText,
	{5, 10, 15, SearchWindowWidth - 10},
	statTextControl {
		 {	/* optional Fields */
			0x0,
			FctlProcNotPtr + refIsResource,
			0x0,
			kSearchText,
			0,
			leftJust
		}
	}
};

resource rTextForLETextBox2 (kSearchText) {
	"Search..."
};

resource rControlTemplate (kSearchLineEdit) {
	kSearchLineEdit,
	{ 21, -2, 41, SearchWindowWidth + 2 },
	editLineControl {
		 {	/* optional Fields */
			0x0, /* flags */
			FctlCanBeTarget+FctlWantsEvents+FctlProcNotPtr, /* more flags */
			0x0, /* ref con */
			255, /* max size */
			0, /* default text */
			-1 /* password char (not a password field) */
			//0 /* leKeyIsNonControl */ /* classify key filter */
		}
	}
};



resource rPString (kIndexWindow, nocrossbank){" Gopher "};
resource rPString (kTextWindow, nocrossbank){" Gopher "};

resource rWindColor (kIndexWindow) {
	0x0, /* frame color */
	0xF00, /* title color */
	0x20F, /* title bar color */
	0xF0FF, /* grow color */
	0xF0 /* info color */
};

resource rWindColor (kTextWindow) {
	0x0, /* frame color */
	0xF00, /* title color */
	0x20F, /* title bar color */
	0xF0FF, /* grow color */
	0xF0 /* info color */
};



resource rWindColor (kURLWindow) {
	0x0, /* frame color */
	0x0f0f, /* title color */
	0x0000, /* title bar color */
	0xf0ff, /* grow color */
	0xf0f0 /* info color */
};



#define leKeyIsSpecial 0x8000
#define leKeyIsNumber 0x4000
#define leKeyIsHex 0x2000
#define leKeyIsAlpha 0x1000
#define leKeyIsNonControl 0x0800

resource rControlTemplate (kGopherURL) {
	kGopherURL,
	// {3, 4, 17, 556 },
	{ -1, -2, 21, 560+2 },
	editLineControl {
		 {	/* optional Fields */
			0x0, /* flags */
			FctlCanBeTarget+FctlWantsEvents+FctlProcNotPtr, /* more flags */
			0x0, /* ref con */
			255, /* max size */
			0, /* default text */
			-1 /* password char (not a password field) */
			//0 /* leKeyIsNonControl */ /* classify key filter */
		}
	}
};

#define fListString 0x0001
#define fListSelect 0x0002
#define fListScrollBar 0x0004

#define testMemNever 0x0040

resource rControlTemplate (kGopherIndex) {
	kGopherIndex,
	{-1, -2, IndexWindowHeight - 1, IndexWindowWidth-22 },
	ListControl {
		 {	/* optional Fields */
			testMemNever, /* flags */
			FctlProcNotPtr+FctlIsMultiPart /*+FctlCanBeTarget+FctlWantsEvents*/, /* more flags */
			0x0, /* ref con */
			0, /* list size */
			0, /* list view -- height*/
			fListSelect, /* list type */
			1, /* list start */
			11, /* list mem height */
			0, /* list mem size */
			0x0, /* list ref */
			0x0, /* list color ref */
		}
	}
};


resource rControlTemplate (kGopherText) {
	kGopherText,
	{-1, -2, TextWindowHeight - 1, TextWindowWidth+1 },
	editTextControl {
		 {	/* optional Fields */
			0x0, /* flags */
			FctlCanBeTarget+FctlWantsEvents+FctlProcNotPtr+FctlTellAboutSize+FctlIsMultiPart, /* more flags */
			0x0, /* ref con */
			fNoWordWrap+fGrowRuler+fSingleStyle+fReadOnly+fDrawBounds, /* text flags */
			{0xffff, 0xffff, 0xffff, 0xffff}, /* indent rect */
			0xffffffff, /* horizontal bar */
			0, // vertical amount
			0, // horizontal bar
			0, // horizontal amount
			0, // style ref
			0, // text descriptor
			(refIsPtr << 3) + dataIsPString, // text ref
			0 // text size
		}
	}
};


/* Some of the GetSysIcons have incorrect masks */

// folder
// ..***.....
// .*...****.
// .*.......*
// .*.......*
// .*.......*
// .*.......*
// .*********
// ..........
resource rIcon (kIconFolder) {
	$0000, // type
	8, 10, // height, width
	$"ff000fffff"
	$"f0efe0000f"
	$"f0fefefef0"
	$"f0efefefe0"
	$"f0fefefef0"
	$"f0efefefe0"
	$"f000000000"
	$"ffffffffff",

	$"00fff00000"
	$"0ffffffff0"
	$"0fffffffff"
	$"0fffffffff"
	$"0fffffffff"
	$"0fffffffff"
	$"0fffffffff"
	$"0000000000"
};

// open folder icon
// ....***.....
// ...*...****.
// ...*.......*
// *********..*
// .*.......*.*
// ..*.......**
// ...*********
// ............
resource rIcon (kIconFolderOpen) {
	$0000, // type
	8, 12, // height, width

	$"ffff000fffff"
	$"fff0efe0000f"
	$"fff0fefefef0"
	$"000000000fe0"
	$"f0fefefef0f0"
	$"ff0fefefef00"
	$"fff000000000"
	$"ffffffffffff",

	$"0000fff00000"
	$"000ffffffff0"
	$"000fffffffff"
	$"ffffffffffff"
	$"0fffffffffff"
	$"00ffffffffff"
	$"000fffffffff"
	$"000000000000"
};

// generic document 
// ............
// ..*******...
// ..*....*.*..
// ..*....***..
// ..*......*..
// ..*......*..
// ..*......*..
// ..********..
resource rIcon (kIconDocument) {
	$0000, // type
	8, 12, // height, width

	$"ff0000000fff"
	$"ff0ffff0f0ff"
	$"ff0ffff000ff"
	$"ff0ffffff0ff"
	$"ff0ffffff0ff"
	$"ff0ffffff0ff"
	$"ff0ffffff0ff"
	$"ff00000000ff",

	$"00fffffff000"
	$"00ffffffff00"
	$"00ffffffff00"
	$"00ffffffff00"
	$"00ffffffff00"
	$"00ffffffff00"
	$"00ffffffff00"
	$"00ffffffff00"

};

// binary
resource rIcon (kIconBinary) {
	$0000, // type
	8, 12, // height, width

	$"ff0000000fff"
	$"ff0ff0f0f0ff"
	$"ff0ff0f000ff"
	$"ff0ff0fff0ff"
	$"ff0f0fc0c0ff"
	$"ff0f0f0f00ff"
	$"ff0f0fc0c0ff"
	$"ff00000000ff",

	$"00fffffff000"
	$"00ffffffff00"
	$"00ffffffff00"
	$"00ffffffff00"
	$"00ffffffff00"
	$"00ffffffff00"
	$"00ffffffff00"
	$"00ffffffff00",
};

// text
resource rIcon (kIconText) {
	$0000, // type
	8, 12, // height, width

	$"ff0000000fff"
	$"ff0ffff0f0ff"
	$"ff0f00f000ff"
	$"ff0ffffff0ff"
	$"ff0f0f00f0ff"
	$"ff0ffffff0ff"
	$"ff0f0f0ff0ff"
	$"ff00000000ff",

	$"00fffffff000"
	$"00ffffffff00"
	$"00ffffffff00"
	$"00ffffffff00"
	$"00ffffffff00"
	$"00ffffffff00"
	$"00ffffffff00"
	$"00ffffffff00",
};

// source code
resource rIcon (kIconSource) {
	$0000, // type
	8, 12, // height, width

	$"ff0000000fff"
	$"ff0ffff0f0ff"
	$"ff0fddf000ff"
	$"ff0ffffff0ff"
	$"ff0fdfddf0ff"
	$"ff0ffffff0ff"
	$"ff0fdfdff0ff"
	$"ff00000000ff",

	$"00fffffff000"
	$"00ffffffff00"
	$"00ffffffff00"
	$"00ffffffff00"
	$"00ffffffff00"
	$"00ffffffff00"
	$"00ffffffff00"
	$"00ffffffff00",
};


// magnifying glass
resource rIcon (kIconSearch) {
	0x0, // type
	8, 12,
	$"fffffc003fff"
	$"ffffc0ff03ff"
	$"ffff0ffff0ff"
	$"ffff0ffff0ff"
	$"ffffc0ff03ff"
	$"ffff0c003fff"
	$"fff0ffffffff"
	$"ff0fffffffff",

	$"00000ffff000"
	$"0000ff00ff00"
	$"0000f0000f00"
	$"0000f0000f00"
	$"0000ff00ff00"
	$"0000fffff000"
	$"000f00000000"
	$"00f000000000"
};



#if 0
type rAlertString {

	switch {
		case sizeCustom:
			key byte = 0x30;
			rect;
		case size30: key byte = 0x31;
		case size60: key byte = 0x32;
		case size110: key byte = 0x33;
		case size175: key byte = 0x34;
		case size110: key byte = 0x35;
		case size40: key byte = 0x36;
		case size200: key byte = 0x37;
		case size250: key byte = 0x38;
		case size300: key byte = 0x39;
	};

	switch {
		case iconNone: key byte = 0x30;
		case iconCustom:
			key byte = 0x31;
			longint;
			int; // width, in bytes
			int; // height
		case iconStop: key byte = 0x32;
		case iconNote: key byte = 0x33;
		case iconCaution: key byte = 0x34;
		case iconDisk: key byte = 0x35;
		case iconDiskSwap: key byte = 0x36;
	};

	string;
	string = $"00";
};


resource rAlertString(1) {

	size30 {},
	iconCustom { kGopherHeadIcon, 21, 38},
	"~Gopher 1.0~^#0"
};
#endif


////

#define kGopherHeadIcon 100

resource rIcon(kGopherHeadIcon) {
	$8000, // type
	38, // height
	42, // width

	$"ffffffffffffffffff0000000000000fffffffffff"
	$"fffffffffffffffff12331dfffffffc0ffffffffff"
	$"fffffffffff0000000d5b13dddfffdff0fffffffff"
	$"ffffffffff0fffffefffffffffeeffffc0ffffffff"
	$"ffffffff009fffdeff2ffffecfff7ffff0ffffffff"
	$"fffffff0fffe4feffffec404ec40e00eff0fffffff"
	$"ffffff03ffff8feefffee440eee22ddcff0fffffff"
	$"fffff0ffeccefefff33ffeee4cd0c6c322f0ffffff"
	$"ffff0fefecceeffffdb3ffeececc4e253ff40fffff"
	$"fff0f40fe6e44670030003f67eeee442517fd0ffff"
	$"ff0ff40fee6e07700d0003dce7fee604c01fe00fff"
	$"f0ff000e66cdffff000000ff327fffec8fffff0fff"
	$"f0ff000ececcffff000000ffb1eefffc6effff00ff"
	$"0ffe00efecee4effffffffc00673eeffffc000fc0f"
	$"0ffc006fe6eccefffffffff004efccfffef510f00f"
	$"0effffffffffffeeefecc46eefffffef1000003f0c"
	$"0eeeeffffffffefe6ee8cccfeff3ffffc000003f0c"
	$"07ffffffeeffefe6e666e1ffffffffbdf30000f10c"
	$"0effffffffeff6eccee7e3fffcfff3ffdd0000ff0c"
	$"0ffffffe7e40b6ec007c3f2cce6c991001003f30cc"
	$"0fffffffeff0ce6e07cf22cf23cf333000d0bfd0cf"
	$"0feeeeffeff37f46fcc04cfbfb310000000bfd0ccf"
	$"07fff77fffc8eecc8e608cce2d9b10000003fd0cff"
	$"f0feffeeceffe73cc80dccf0d310000000bff0ccff"
	$"f0fffffffe6eee77c88278dff9000000003ff0cfff"
	$"ff0feef66ee0c0274c0c87c10000030d0bfd0ccfff"
	$"ff0fffeeceecc0224e530af01015555502ff0cffff"
	$"ff0eccece6e66e7c22f6219d800f30000fd0ccffff"
	$"ff07fecee7ece6238fcd8a300501d5500ff0cfffff"
	$"fff06eece80303de0832318b3000033f3f0ccfffff"
	$"fff0eccefe7d002d83374dd0d8000d33cf0cffffff"
	$"ffff0e4008ceffb37991991d3df33000bd0cffffff"
	$"ffff06e0277dccfcd3330cd9dddb10001b0cffffff"
	$"fffff00e48e67c03732300000001b33330ccffffff"
	$"ffffff0cc227cf30d9710000000319ddd0cfffffff"
	$"fffffff0267000000000ccccccc0300000cfffffff"
	$"ffffffff000ccccccccccfffffff00000ccfffffff"
	$"fffffffffcccfffffffffffffffffcccccffffffff"
	,
	$"000000000000000000fffffffffffff00000000000"
	$"00000000000000000fffffffffffffff0000000000"
	$"00000000000ffffffffffffffffffffff000000000"
	$"0000000000ffffffffffffffffffffffff00000000"
	$"00000000ffffffffffffffffffffffffff00000000"
	$"0000000ffffffffffffffffffffffffffff0000000"
	$"000000fffffffffffffffffffffffffffff0000000"
	$"00000fffffffffffffffffffffffffffffff000000"
	$"0000fffffffffffffffffffffffffffffffff00000"
	$"000fffffffffffffffffffffffffffffffffff0000"
	$"00fffffffffffffffffffffffffffffffffffff000"
	$"0ffffffffffffffffffffffffffffffffffffff000"
	$"0fffffffffffffffffffffffffffffffffffffff00"
	$"fffffffffffffffffffffffffffffffffffffffff0"
	$"fffffffffffffffffffffffffffffffffffffffff0"
	$"ffffffffffffffffffffffffffffffffffffffffff"
	$"ffffffffffffffffffffffffffffffffffffffffff"
	$"ffffffffffffffffffffffffffffffffffffffffff"
	$"ffffffffffffffffffffffffffffffffffffffffff"
	$"ffffffffffffffffffffffffffffffffffffffffff"
	$"fffffffffffffffffffffffffffffffffffffffff0"
	$"fffffffffffffffffffffffffffffffffffffffff0"
	$"ffffffffffffffffffffffffffffffffffffffff00"
	$"0fffffffffffffffffffffffffffffffffffffff00"
	$"0ffffffffffffffffffffffffffffffffffffff000"
	$"00fffffffffffffffffffffffffffffffffffff000"
	$"00ffffffffffffffffffffffffffffffffffff0000"
	$"00ffffffffffffffffffffffffffffffffffff0000"
	$"00fffffffffffffffffffffffffffffffffff00000"
	$"000ffffffffffffffffffffffffffffffffff00000"
	$"000fffffffffffffffffffffffffffffffff000000"
	$"0000ffffffffffffffffffffffffffffffff000000"
	$"0000ffffffffffffffffffffffffffffffff000000"
	$"00000fffffffffffffffffffffffffffffff000000"
	$"000000fffffffffffffffffffffffffffff0000000"
	$"0000000ffffffffffffffffffffffffffff0000000"
	$"00000000fffffffffffff0000000fffffff0000000"
	$"000000000fff00000000000000000fffff00000000"

};

resource rIcon(101) {
	$0000, // type
	8, // height
	8, // width

	$"ffc003ff"
	$"ff300cff"
	$"cf0000f3"
	$"0303c0c0"
	$"f0300c0f"
	$"f00ff00f"
	$"f00ff00f"
	$"00000000"
	,
	$"00ffff00"
	$"00ffff00"
	$"f0ffff0f"
	$"ffffffff"
	$"0ffffff0"
	$"0ffffff0"
	$"0ffffff0"
	$"ffffffff"

};

resource rIcon(102) {
	$8000, // type
	18, // height
	36, // width

	$"ffffffffffffffffffffffffffffffffffff"
	$"fffff0000700000446440400003f0000ffff"
	$"ffffff064046ce7cf6f6cf6cc440040fffff"
	$"fffff406eeece76767667666fffec4ffffff"
	$"ffff006ff407ccccccccccccc44fec40ffff"
	$"fff0466c00e47ccce77ce66e4ec077c40fff"
	$"ff046ccfe000ecccccccccce001fe77c40ff"
	$"f006e67cf000f6eefffffeff000f7667c40f"
	$"f0674cc76eeeeff4000007eeffe6cccce40f"
	$"f04ee77ccccce00009d9000766777ccf7e0c"
	$"f0076cccccccfe000010000eccccc77cc00c"
	$"ff00cecccce7c6ffc0006ff66f777cec40cc"
	$"fff00cee7cccfc000fff0007766cee440ccf"
	$"ffff0047f7f677ee4fff47ffecf7c400ccff"
	$"fffff0004ccf6e7cc4446f6cce4c000ccfff"
	$"fffffff00000c7676c8cf66400000cccffff"
	$"fffffffff00000000000000000ccccffffff"
	$"ffffffffffffcccccccccccccccfffffffff"
	,
	$"000000000000000000000000000000000000"
	$"00000ffffffffffffffffffffff0ffff0000"
	$"000000fffffffffffffffffffffffff00000"
	$"00000fffffffffffffffffffffffff000000"
	$"0000ffffffffffffffffffffffffffff0000"
	$"000ffffffffffffffffffffffffffffff000"
	$"00ffffffffffffffffffffffffffffffff00"
	$"0ffffffffffffffffffffffffffffffffff0"
	$"0ffffffffffffffffffffffffffffffffff0"
	$"0fffffffffffffffffffffffffffffffffff"
	$"0fffffffffffffffffffffffffffffffffff"
	$"00ffffffffffffffffffffffffffffffffff"
	$"000ffffffffffffffffffffffffffffffff0"
	$"0000ffffffffffffffffffffffffffffff00"
	$"00000ffffffffffffffffffffffffffff000"
	$"0000000fffffffffffffffffffffffff0000"
	$"000000000fffffffffffffffffffff000000"
	$"000000000000fffffffffffffff000000000"

};

resource rIcon(103) {
	$0000, // type
	8, // height
	8, // width

	$"ffc003ff"
	$"ff300cff"
	$"cf0000f3"
	$"0303c0c0"
	$"f0300c0f"
	$"f00ff00f"
	$"f00ff00f"
	$"00000000"
	,
	$"00ffff00"
	$"00ffff00"
	$"f0ffff0f"
	$"ffffffff"
	$"0ffffff0"
	$"0ffffff0"
	$"0ffffff0"
	$"ffffffff"

};

resource rIcon(104) {
	$0000, // type
	18, // height
	16, // width

	$"ffffffffffffffff"
	$"ffff3c00003cffff"
	$"fff0000000000fff"
	$"ffff00f00f00ffff"
	$"fffc000000003fff"
	$"fff0000300000fff"
	$"fcf000ffff000f3f"
	$"f00f000ff000f00f"
	$"fc00f000000f003f"
	$"ff000ff00ff000ff"
	$"ffc0000ff00003ff"
	$"ffc000ffff0003ff"
	$"ffc00ffff0f003ff"
	$"fff00f0f0ff00fff"
	$"fff000f0ff000fff"
	$"ff00000ff00000ff"
	$"ff000000000000ff"
	$"ffffffffffffffff"
	,
	$"0000ffffffff0000"
	$"000ffffffffff000"
	$"00ffffffffffff00"
	$"000ffffffffff000"
	$"00ffffffffffff00"
	$"0ffffffffffffff0"
	$"ffffffffffffffff"
	$"ffffffffffffffff"
	$"ffffffffffffffff"
	$"0ffffffffffffff0"
	$"0ffffffffffffff0"
	$"0ffffffffffffff0"
	$"0ffffffffffffff0"
	$"00ffffffffffff00"
	$"00ffffffffffff00"
	$"0ffffffffffffff0"
	$"0ffffffffffffff0"
	$"0ffffffffffffff0"

};

resource rIcon(105) {
	$0000, // type
	8, // height
	8, // width

	$"ffc003ff"
	$"ff300cff"
	$"cf0000f3"
	$"0303c0c0"
	$"f0300c0f"
	$"f00ff00f"
	$"f00ff00f"
	$"00000000"
	,
	$"00ffff00"
	$"00ffff00"
	$"f0ffff0f"
	$"ffffffff"
	$"0ffffff0"
	$"0ffffff0"
	$"0ffffff0"
	$"ffffffff"

};


// About

#define kAboutHeight 60
#define kAboutWidth 380
resource rWindParam1 (kAboutWindow) {
	0x20A0,
	0x0,
	0x0,
	{0, 0, 0, 0},
	0x0,
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	0x0,
	0,
	{60, 130, 60+kAboutHeight, 130+kAboutWidth},
	infront,
	kAboutWindow,
	0x9
};


resource rControlList (kAboutWindow) {
	{ kAboutButton, kAboutIcon, kAboutText }
};

resource rControlTemplate (kAboutText) {
	0x3,
	{10, 104, 40, kAboutWidth - 10},
	statTextControl {
		 {	/* optional Fields */
			0x0,
			FctlProcNotPtr + refIsResource,
			0x0,
			kAboutText,
			0,
			leftJust
		}
	}
};

resource rTextForLETextBox2 (kAboutText) {
	TBForeColor TBColor0
	TBBackColor TBColorF
	"GS-Gopher alpha 2\n"
	TBStyleItalic
	"2023-02-16\n"
};


resource rControlTemplate (kAboutButton) {
	kAboutButton,
	{kAboutHeight - 5 - 13, kAboutWidth - 10 - 100, kAboutHeight-5, kAboutWidth - 10},
	SimpleButtonControl {
		 {	/* optional Fields */
			0x3, // square, drop shadow.
			FctlProcNotPtr + FctlWantsEvents + refIsResource,
			0x0,
			kAboutButton,
			0x0,
			{
				"\n",
				"\n",
				0x0,
				0x0
			}
		}
	}
};


resource rPString (kAboutButton) {
	"Geomyidae"
};

resource rControlTemplate (kAboutIcon) {
	kAboutIcon,
	{10, 10, 10+38, 10+42*2},
	IconButtonControl {
		 {	/* optional Fields */
			0x4+0x08, // no border, disabled
			FctlProcNotPtr + (refIsResource << 4),
			0x0,
			kAboutIcon,
			0x0,
			0x0,
			0x0
		}
	}
};

resource rIcon(kAboutIcon) {
	$8000, // type
	38, // height
	42, // width

	$"ffffffffffffffffff0000000000000fffffffffff"
	$"fffffffffffffffff12331dfffffffc0ffffffffff"
	$"fffffffffff0000000d5b13dddfffdff0fffffffff"
	$"ffffffffff0fffffefffffffffeeffffc0ffffffff"
	$"ffffffff009fffdeff2ffffecfff7ffff0ffffffff"
	$"fffffff0fffe4feffffec404ec40e00eff0fffffff"
	$"ffffff03ffff8feefffee440eee22ddcff0fffffff"
	$"fffff0ffeccefefff33ffeee4cd0c6c322f0ffffff"
	$"ffff0fefecceeffffdb3ffeececc4e253ff40fffff"
	$"fff0f40fe6e44670030003f67eeee442517fd0ffff"
	$"ff0ff40fee6e07700d0003dce7fee604c01fe00fff"
	$"f0ff000e66cdffff000000ff327fffec8fffff0fff"
	$"f0ff000ececcffff000000ffb1eefffc6effff00ff"
	$"0ffe00efecee4effffffffc00673eeffffc000fc0f"
	$"0ffc006fe6eccefffffffff004efccfffef510f00f"
	$"0effffffffffffeeefecc46eefffffef1000003f0c"
	$"0eeeeffffffffefe6ee8cccfeff3ffffc000003f0c"
	$"07ffffffeeffefe6e666e1ffffffffbdf30000f10c"
	$"0effffffffeff6eccee7e3fffcfff3ffdd0000ff0c"
	$"0ffffffe7e40b6ec007c3f2cce6c991001003f30cc"
	$"0fffffffeff0ce6e07cf22cf23cf333000d0bfd0cf"
	$"0feeeeffeff37f46fcc04cfbfb310000000bfd0ccf"
	$"07fff77fffc8eecc8e608cce2d9b10000003fd0cff"
	$"f0feffeeceffe73cc80dccf0d310000000bff0ccff"
	$"f0fffffffe6eee77c88278dff9000000003ff0cfff"
	$"ff0feef66ee0c0274c0c87c10000030d0bfd0ccfff"
	$"ff0fffeeceecc0224e530af01015555502ff0cffff"
	$"ff0eccece6e66e7c22f6219d800f30000fd0ccffff"
	$"ff07fecee7ece6238fcd8a300501d5500ff0cfffff"
	$"fff06eece80303de0832318b3000033f3f0ccfffff"
	$"fff0eccefe7d002d83374dd0d8000d33cf0cffffff"
	$"ffff0e4008ceffb37991991d3df33000bd0cffffff"
	$"ffff06e0277dccfcd3330cd9dddb10001b0cffffff"
	$"fffff00e48e67c03732300000001b33330ccffffff"
	$"ffffff0cc227cf30d9710000000319ddd0cfffffff"
	$"fffffff0267000000000ccccccc0300000cfffffff"
	$"ffffffff000ccccccccccfffffff00000ccfffffff"
	$"fffffffffcccfffffffffffffffffcccccffffffff"
	,
	$"000000000000000000fffffffffffff00000000000"
	$"00000000000000000fffffffffffffff0000000000"
	$"00000000000ffffffffffffffffffffff000000000"
	$"0000000000ffffffffffffffffffffffff00000000"
	$"00000000ffffffffffffffffffffffffff00000000"
	$"0000000ffffffffffffffffffffffffffff0000000"
	$"000000fffffffffffffffffffffffffffff0000000"
	$"00000fffffffffffffffffffffffffffffff000000"
	$"0000fffffffffffffffffffffffffffffffff00000"
	$"000fffffffffffffffffffffffffffffffffff0000"
	$"00fffffffffffffffffffffffffffffffffffff000"
	$"0ffffffffffffffffffffffffffffffffffffff000"
	$"0fffffffffffffffffffffffffffffffffffffff00"
	$"fffffffffffffffffffffffffffffffffffffffff0"
	$"fffffffffffffffffffffffffffffffffffffffff0"
	$"ffffffffffffffffffffffffffffffffffffffffff"
	$"ffffffffffffffffffffffffffffffffffffffffff"
	$"ffffffffffffffffffffffffffffffffffffffffff"
	$"ffffffffffffffffffffffffffffffffffffffffff"
	$"ffffffffffffffffffffffffffffffffffffffffff"
	$"fffffffffffffffffffffffffffffffffffffffff0"
	$"fffffffffffffffffffffffffffffffffffffffff0"
	$"ffffffffffffffffffffffffffffffffffffffff00"
	$"0fffffffffffffffffffffffffffffffffffffff00"
	$"0ffffffffffffffffffffffffffffffffffffff000"
	$"00fffffffffffffffffffffffffffffffffffff000"
	$"00ffffffffffffffffffffffffffffffffffff0000"
	$"00ffffffffffffffffffffffffffffffffffff0000"
	$"00fffffffffffffffffffffffffffffffffff00000"
	$"000ffffffffffffffffffffffffffffffffff00000"
	$"000fffffffffffffffffffffffffffffffff000000"
	$"0000ffffffffffffffffffffffffffffffff000000"
	$"0000ffffffffffffffffffffffffffffffff000000"
	$"00000fffffffffffffffffffffffffffffff000000"
	$"000000fffffffffffffffffffffffffffff0000000"
	$"0000000ffffffffffffffffffffffffffff0000000"
	$"00000000fffffffffffff0000000fffffff0000000"
	$"000000000fff00000000000000000fffff00000000"

};


/* network status window */
#define kNetworkHeight 50
#define kNetworkWidth 384
resource rWindParam1 (kNetworkWindow) {
	0x20A0,
	0x0,
	0x0,
	{0, 0, 0, 0},
	0x0,
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	0x0,
	0,
	{81, 128, 81+kNetworkHeight, 128+kNetworkWidth},
	infront,
	kNetworkWindow,
	0x9
};

resource rControlList(kNetworkWindow) {
	{
		kNetworkStatusLeft,
		kNetworkStatusRight,
		kNetworkIPLeft,
		kNetworkIPRight,
		kNetworkConnect,
		kNetworkDisconnect
	}
};


resource rControlTemplate (kNetworkStatusLeft) {
	kNetworkStatusLeft,
	{4, 6, 14, 100},
	statTextControl {
		 {	/* optional Fields */
			0x0,
			FctlProcNotPtr + refIsResource,
			0x0,
			kNetworkStatusLeft,
			0,
			leftJust
		}
	}
};
resource rTextForLETextBox2(kNetworkStatusLeft) {
	"Status:"
};

resource rControlTemplate (kNetworkStatusRight) {
	kNetworkStatusRight,
	{4, 104, 14, 300},
	statTextControl {
		 {	/* optional Fields */
			0x0,
			FctlProcNotPtr + refIsResource,
			0x0,
			kNetworkStatusRight,
			0,
			leftJust
		}
	}
};
resource rTextForLETextBox2(kNetworkStatusRight) {
	""
};


resource rControlTemplate (kNetworkIPLeft) {
	kNetworkIPLeft,
	{18, 6, 28, 100},
	statTextControl {
		 {	/* optional Fields */
			0x0,
			FctlProcNotPtr + refIsResource,
			0x0,
			kNetworkIPLeft,
			0,
			leftJust
		}
	}
};
resource rTextForLETextBox2(kNetworkIPLeft) {
	"IP Address:"
};

resource rControlTemplate (kNetworkIPRight) {
	kNetworkIPRight,
	{18, 104, 28, 300},
	statTextControl {
		 {	/* optional Fields */
			0x0,
			FctlProcNotPtr + refIsResource,
			0x0,
			kNetworkIPRight,
			0,
			leftJust
		}
	}
};
resource rTextForLETextBox2(kNetworkIPRight) {
	""
};

resource rControlTemplate (kNetworkConnect) {
	kNetworkConnect,
	{kNetworkHeight - 4 - 13, 6, kNetworkHeight-4, 100},
	SimpleButtonControl {
		 {	/* optional Fields */
			0x2,
			FctlProcNotPtr + FctlWantsEvents + refIsResource,
			0x0,
			kNetworkConnect
		}
	}
};

resource rPString(kNetworkConnect) {
	"Connect"
};


resource rControlTemplate (kNetworkDisconnect) {
	kNetworkDisconnect,
	{kNetworkHeight - 4 - 13, kNetworkWidth-100, kNetworkHeight-4, kNetworkWidth - 6},
	SimpleButtonControl {
		 {	/* optional Fields */
			0x2,
			FctlProcNotPtr + FctlWantsEvents + refIsResource,
			0x0,
			kNetworkDisconnect
		}
	}
};

resource rPString(kNetworkDisconnect) {
	"Disconnect"
};


read rFont(1) "resources/mc.font";
